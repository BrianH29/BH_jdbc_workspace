package com.kh.view;

import java.util.Scanner;

import com.kh.controller.MemberController;

public class MemberMenu {
	
	private Scanner sc = new Scanner(System.in);
	private MemberController mc = new MemberController(); 
	
	
	public void mainMenu() {
		
		int menu; // ---> 반복족으로 loop문에서 메뉴를 받을때 loop을 빠져나오면 또 박스를 만들기 떄문에 공간을 차지 하기 떄문에 밖에다가 미리 선언해두는것도 방법 
		while(true) {
			System.out.println("\n===회원 관리 프로그램===");
			System.out.println("1. 회원 가입");
			System.out.println("2. 회원 전체 조회");
			System.out.println("3. 회원 아이디로 검색");
			System.out.println("4. 회원 이름(키워드)으로 검색");
			System.out.println("5. 회원 정보 변경");
			System.out.println("6. 회원 탈퇴");
			System.out.println("0. 프로그램종료");
			System.out.print("메뉴 선택: ");
			menu = sc.nextInt();
			sc.nextLine(); 
			
			switch(menu) {
			case 1 : break;
			case 2 : break;
			case 3 : break;
			case 4 : break;
			case 5 : break;
			case 6 : break;
			case 0 : System.out.println("정말로 끝내겠습니까?(y/n)"); 
					 if(sc.nextLine().toUpperCase().charAt(0) == 'Y') {
						 System.out.println("프로그램을 종료합니다.");
						 return; 
					 } else {
						 break; 
					 }
			default :  System.out.println("메뉴를 다시 선택해주세요.");
			}
			
		}//e.loop
		
	}//e.mainMenu
	
	// 사용자에게 값을 입력받는 화면들
	// 1. 회원 가입 화면 (회원의 정보들 입력받는 화면)
	public void insertMember() {
		System.out.println("\n====회원 가입====");
		System.out.print("ID: ");
		String userId = sc.nextLine();
		
		System.out.print("PWD: ");
		String userPwd = sc.nextLine(); 
		
		System.out.print("Name: ");
		String userName = sc.nextLine(); 
		
		
		System.out.print("Gender(M/F): ");
		String gender = sc.nextLine().toUpperCase(); // 사용자가 소문자로 입력할 수 있기 떄문에 무조건 대문자가 오게끔 uppercase 사용
		
		System.out.print("Age: ");
		int age = sc.nextInt();
		sc.nextLine();
		
		System.out.print("Email: ");
		String email = sc.nextLine();
		
		System.out.print("ph Number(w/o -): ");
		String phone = sc.nextLine(); 
		
		System.out.print("Addresss: ");
		String address = sc.nextLine(); 
		
		System.out.print("Hobby(, w/o space): ");
		String hobby = sc.nextLine();
	}
	
	// 2. 회원 아이디 입력받는 화면(회원 아이디로검색, 회원정보수정, 회원탈퇴)
	
	// 3. 회원 이름 입력받는 화면
	
	// 4. 회원 정보 수정하는 화면 (변경하고자하는 회원아이디, 비번, 이메일, 전화번호, 주소 )
	
	
	
	
	//사용자가 서비스 요청 후 보게되는 응답화면들 
	
	
	
	

}
